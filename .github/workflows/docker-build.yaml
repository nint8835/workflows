on:
    workflow_call:
        inputs:
            image_name:
                description: Name of the final Docker image, not including the registry or tag
                type: string
                required: true
            tag_rules:
                description: Rules to be used to determine the tag for the Docker image. See the readme for https://github.com/docker/metadata-action for more information.
                type: string
                default: |
                  type=raw,value=latest,enable={{is_default_branch}}

jobs:
    docker-build:
        name: Build Docker image
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@5927c834f5b4fdf503fca6f4c7eccda82949e1ee # v3
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3

            - name: Login to target registry
              uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
              with:
                  # TODO: Support other registries
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            
            - name: Generate image metadata
              uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5
              id: metadata
              with:
                  images: ghcr.io/${{ inputs.image_name }}
                  tags: ${{ inputs.tag_rules }}
            
            - name: Build and push Docker image
              uses: docker/build-push-action@1ca370b3a9802c92e886402e0dd88098a2533b12 # v6
              id: push
              with:
                  context: .
                  push: true
                  tags: ${{ steps.metadata.outputs.tags }}
                  labels: ${{ steps.metadata.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
            
            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@d4c1ca22b806a1080396b9206bd31e4df89af30d # v1
              with:
                  subject-name: ghcr.io/${{ inputs.image_name }}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true
